package com.example.universitymarket.objects;

import androidx.annotation.Discouraged;
import java.util.HashMap;
import java.util.ArrayList;
import com.example.universitymarket.utilities.Data;

/**
 * <b>
 * ANY MODIFICATIONS WILL BE OVERWRITTEN ON BUILD 
 * </b><p>
 * Autogenerated on: Mar 20, 2024, 11:35:02 AM
 * <div>
 * File based on 'test_skeleton.json' located at <a href="file:///Users/prestonscott/Desktop/OOSE/University-Market/UniversityMarket/app/src/main/res/raw/">main/res/raw/</a>
*/
public class Test extends HashMap<String, Object> {
    private HashMap<String, Object> coll_lvl1 = new HashMap<>();
    private ArrayList<HashMap> list_lvl1 = new ArrayList<>();
    private String field_lvl1 = null;
    private ArrayList<Object> list_lvl2 = new ArrayList<>();
    private String field_lvl2 = null;
    private HashMap<String, Object> list_lvl1Map = new HashMap<>();

    @Discouraged(message = "Unless you are initializing with data directly from database, do not use this constructor")
    public Test(HashMap<String, Object> rawdata) {
        ArrayList<String> rawKeys = new ArrayList<>(rawdata != null ? rawdata.keySet() : new ArrayList<>());
        super.put("coll_lvl1", rawKeys.contains("coll_lvl1") ? rawdata.get("coll_lvl1") : null);
        super.put("list_lvl1", rawKeys.contains("list_lvl1") ? rawdata.get("list_lvl1") : null);
        super.put("field_lvl1", rawKeys.contains("field_lvl1") ? rawdata.get("field_lvl1") : null);
        ArrayList<String> superKeys = new ArrayList<>(super.keySet());
        coll_lvl1 = superKeys.contains("coll_lvl1") ? (HashMap<String, Object>) super.get("coll_lvl1") : null;
        list_lvl1 = superKeys.contains("list_lvl1") ? (ArrayList<HashMap>) super.get("list_lvl1") : null;
        field_lvl1 = superKeys.contains("field_lvl1") ? (String) super.get("field_lvl1") : null;
        ArrayList<String> coll_lvl1Keys = new ArrayList<>(coll_lvl1 != null ? coll_lvl1.keySet() : new ArrayList<>());
        list_lvl2 = coll_lvl1Keys.contains("list_lvl2") ? (ArrayList<Object>) coll_lvl1.get("list_lvl2") : null;
        field_lvl2 = coll_lvl1Keys.contains("field_lvl2") ? (String) coll_lvl1.get("field_lvl2") : null;

        for(int i = 0; list_lvl1 != null && i < list_lvl1.size(); i++) {
            Data.mergeHash(list_lvl1Map, (HashMap<String, Object>) list_lvl1.get(i));
        }
        formatSuper();
    }

    public Test(ArrayList<Object> list_lvl2, String field_lvl2, ArrayList<HashMap> list_lvl1, String field_lvl1) {
        setCollLvl1(list_lvl2, field_lvl2);
        this.list_lvl1 = list_lvl1;
        this.field_lvl1 = field_lvl1;
        formatSuper();
    }

    public Test() {
        formatSuper();
    }

    public HashMap<String, Object> getCollLvl1() { return coll_lvl1; }

    public ArrayList<HashMap> getListLvl1() { return list_lvl1; }

    public String getFieldLvl1() { return field_lvl1; }

    public ArrayList<Object> getListLvl2() { return list_lvl2; }

    public String getFieldLvl2() { return field_lvl2; }

    public HashMap<String, Object> getListLvl1Map() { return list_lvl1Map; }

    public void setCollLvl1(ArrayList<Object> list_lvl2, String field_lvl2) {
        this.list_lvl2 = list_lvl2;
        this.field_lvl2 = field_lvl2;
        formatSuper();
    }

    public void setListLvl1(ArrayList<HashMap> list_lvl1) {
        this.list_lvl1 = list_lvl1;
        formatSuper();
    }

    public void setFieldLvl1(String field_lvl1) {
        this.field_lvl1 = field_lvl1;
        formatSuper();
    }

    public void setListLvl2(ArrayList<Object> list_lvl2) {
        this.list_lvl2 = list_lvl2;
        formatSuper();
    }

    public void setFieldLvl2(String field_lvl2) {
        this.field_lvl2 = field_lvl2;
        formatSuper();
    }

    public HashMap<String, Object> getSuper() { return this; }

    private void formatSuper() {
        coll_lvl1 = new HashMap<>();
        coll_lvl1.put("list_lvl2", list_lvl2);
        coll_lvl1.put("field_lvl2", field_lvl2);
        super.clear();
        super.put("coll_lvl1", coll_lvl1);
        super.put("list_lvl1", list_lvl1);
        super.put("field_lvl1", field_lvl1);
    }
}